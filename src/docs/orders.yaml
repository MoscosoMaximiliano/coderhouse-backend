components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
        product:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: float
        status:
          type: string
      required:
        - id
        - product
        - quantity
        - price
        - status

    CreateOrderRequest:
      type: object
      properties:
        product:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: float
      required:
        - product
        - quantity
        - price

    UpdateOrderRequest:
      type: object
      properties:
        product:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: float
        status:
          type: string
      required:
        - product
        - quantity
        - price
        - status

  requestBodies:
    CreateOrderRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrderRequest'

    UpdateOrderRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOrderRequest'

  responses:
    OrderCreated:
      description: Order created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'

    OrderDetails:
      description: Order details retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'

    OrderUpdated:
      description: Order updated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'

    NoContent:
      description: No content

    BadRequest:
      description: Invalid input

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Order not found


paths:
  /orders:
    post:
      summary: Create a new order
      requestBody:
        $ref: '#/components/requestBodies/CreateOrderRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrderCreated'
        '400':
          $ref: '#/components/responses/BadRequest'

  /orders/{orderId}:
    get:
      summary: Get order details
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OrderDetails'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      summary: Update an order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrderRequest'
      responses:
        '200':
          $ref: '#/components/responses/OrderUpdated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    delete:
      summary: Delete an order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'